set -eu
DEPLOY_DIR="$(dirname $(readlink -f $0))"

API_UWSGI_BIN="$(dirname "${DEPLOY_DIR}")/bin/uwsgi"

# Generate main script. This will be run as root when install.sh is executed
cat <<EOF > "${DEPLOY_DIR}/deploy.sh"
# This file is generated by ${DEPLOY_DIR}/deploy.sh, do not alter
systemctl | grep -q "${PROJECT_NAME}.service" && systemctl stop ${PROJECT_NAME}.service
cat ${DEPLOY_DIR}/server.service > /etc/systemd/system/${PROJECT_NAME}.service

[ -f "${API_SOCKET}" ] && chown ${API_USER}:${API_GROUP} "${API_SOCKET}"

if [ "${PROJECT_MODE}" = "production" ]; then
    systemctl enable ${PROJECT_NAME}.service
    systemctl start ${PROJECT_NAME}.service
else
    systemctl disable ${PROJECT_NAME}.service
    systemctl stop ${PROJECT_NAME}.service
fi
EOF

# Generate systemd unit file
cat <<EOF > "${DEPLOY_DIR}/server.service"
# This file is generated by ${DEPLOY_DIR}/deploy.sh, do not alter
[Unit]
Description=API daemon for ${PROJECT_NAME}
After=network.target

[Service]
ExecStart=${API_UWSGI_BIN} \
    --master \
    --processes=${API_UWSGI_PROCESSES} \
    --threads=${API_UWSGI_THREADS} \
    --enable-threads --thunder-lock \
    --mount /=${EGG_NAME}.uwsgi:app \
    --need-app \
    --chmod-socket=666 \
    --harakiri ${API_UWSGI_HARAKIRI} \
    -s ${API_SOCKET}
WorkingDirectory=${PROJECT_PATH}/server
User=${API_USER}
Group=${API_GROUP}
Restart=on-failure
RestartSec=5s
KillSignal=SIGQUIT
Type=notify
StandardError=syslog
NotifyAccess=all

[Install]
WantedBy=multi-user.target
EOF
